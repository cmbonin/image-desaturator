{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":2,"column":37}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":3,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":4,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":5,"column":22}},{"name":"prop-types","loc":{"line":6,"column":22}},{"name":"react","loc":{"line":7,"column":18}},{"name":"invariant","loc":{"line":8,"column":22}},{"name":"uncontrollable","loc":{"line":9,"column":27}},{"name":"./utils/createChainedFunction","loc":{"line":11,"column":26}},{"name":"./utils/ValidComponentChildren","loc":{"line":12,"column":26}},{"name":"./ButtonGroup","loc":{"line":13,"column":24}},{"name":"./ToggleButton","loc":{"line":14,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _uncontrollable2 = _interopRequireDefault(_uncontrollable);\n\nvar _createChainedFunction = require(\"./utils/createChainedFunction\");\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nvar _ValidComponentChildren = require(\"./utils/ValidComponentChildren\");\n\nvar _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);\n\nvar _ButtonGroup = require(\"./ButtonGroup\");\n\nvar _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);\n\nvar _ToggleButton = require(\"./ToggleButton\");\n\nvar _ToggleButton2 = _interopRequireDefault(_ToggleButton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  /**\n   * An HTML `<input>` name for each child button.\n   *\n   * __Required if `type` is set to `'radio'`__\n   */\n  name: _propTypes2.default.string,\n\n  /**\n   * The value, or array of values, of the active (pressed) buttons\n   *\n   * @controllable onChange\n   */\n  value: _propTypes2.default.any,\n\n  /**\n   * Callback fired when a button is pressed, depending on whether the `type`\n   * is `'radio'` or `'checkbox'`, `onChange` will be called with the value or\n   * array of active values\n   *\n   * @controllable values\n   */\n  onChange: _propTypes2.default.func,\n\n  /**\n   * The input `type` of the rendered buttons, determines the toggle behavior\n   * of the buttons\n   */\n  type: _propTypes2.default.oneOf(['checkbox', 'radio']).isRequired\n};\n\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup = function (_React$Component) {\n  (0, _inherits3.default)(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    (0, _classCallCheck3.default)(this, ToggleButtonGroup);\n\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  ToggleButtonGroup.prototype.getValues = function getValues() {\n    var value = this.props.value;\n\n    return value == null ? [] : [].concat(value);\n  };\n\n  ToggleButtonGroup.prototype.handleToggle = function handleToggle(value) {\n    var _props = this.props,\n        type = _props.type,\n        onChange = _props.onChange;\n\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) {\n        onChange(value);\n      }\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }));\n    } else {\n      onChange([].concat(values, [value]));\n    }\n  };\n\n  ToggleButtonGroup.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        children = _props2.children,\n        type = _props2.type,\n        name = _props2.name,\n        props = (0, _objectWithoutProperties3.default)(_props2, ['children', 'type', 'name']);\n\n    var values = this.getValues();\n\n    !(type !== 'radio' || !!name) ? \"development\" !== 'production' ? (0, _invariant2.default)(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : (0, _invariant2.default)(false) : void 0;\n\n    delete props.onChange;\n    delete props.value;\n\n    // the data attribute is required b/c twbs css uses it in the selector\n    return _react2.default.createElement(_ButtonGroup2.default, (0, _extends3.default)({}, props, { 'data-toggle': 'buttons' }), _ValidComponentChildren2.default.map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler() {\n        return _this2.handleToggle(value);\n      };\n\n      return _react2.default.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: (0, _createChainedFunction2.default)(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(_react2.default.Component);\n\nToggleButtonGroup.propTypes = propTypes;\nToggleButtonGroup.defaultProps = defaultProps;\n\nvar UncontrolledToggleButtonGroup = (0, _uncontrollable2.default)(ToggleButtonGroup, {\n  value: 'onChange'\n});\n\nUncontrolledToggleButtonGroup.Button = _ToggleButton2.default;\n\nexports.default = UncontrolledToggleButtonGroup;"},"hash":"b2038b105c825dec410179a97846c3c1"}