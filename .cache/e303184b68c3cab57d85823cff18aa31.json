{"dependencies":[{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":1,"column":37}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":2,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":3,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":4,"column":22}},{"name":"babel-runtime/helpers/extends","loc":{"line":5,"column":21}},{"name":"classnames","loc":{"line":6,"column":23}},{"name":"dom-helpers/events","loc":{"line":7,"column":19}},{"name":"dom-helpers/ownerDocument","loc":{"line":8,"column":26}},{"name":"dom-helpers/util/inDOM","loc":{"line":9,"column":22}},{"name":"dom-helpers/util/scrollbarSize","loc":{"line":10,"column":29}},{"name":"react","loc":{"line":11,"column":18}},{"name":"prop-types","loc":{"line":12,"column":22}},{"name":"react-dom","loc":{"line":13,"column":21}},{"name":"react-overlays/lib/Modal","loc":{"line":14,"column":22}},{"name":"react-overlays/lib/utils/isOverflowing","loc":{"line":15,"column":26}},{"name":"prop-types-extra/lib/elementType","loc":{"line":16,"column":24}},{"name":"./Fade","loc":{"line":18,"column":17}},{"name":"./ModalBody","loc":{"line":19,"column":17}},{"name":"./ModalDialog","loc":{"line":20,"column":24}},{"name":"./ModalFooter","loc":{"line":21,"column":19}},{"name":"./ModalHeader","loc":{"line":22,"column":19}},{"name":"./ModalTitle","loc":{"line":23,"column":18}},{"name":"./utils/bootstrapUtils","loc":{"line":24,"column":41}},{"name":"./utils/createChainedFunction","loc":{"line":25,"column":34}},{"name":"./utils/splitComponentProps","loc":{"line":26,"column":32}},{"name":"./utils/StyleConfig","loc":{"line":27,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _events = require(\"dom-helpers/events\");\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _ownerDocument = require(\"dom-helpers/ownerDocument\");\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _inDOM = require(\"dom-helpers/util/inDOM\");\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nvar _scrollbarSize = require(\"dom-helpers/util/scrollbarSize\");\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _Modal = require(\"react-overlays/lib/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nvar _isOverflowing = require(\"react-overlays/lib/utils/isOverflowing\");\n\nvar _isOverflowing2 = _interopRequireDefault(_isOverflowing);\n\nvar _elementType = require(\"prop-types-extra/lib/elementType\");\n\nvar _elementType2 = _interopRequireDefault(_elementType);\n\nvar _Fade = require(\"./Fade\");\n\nvar _Fade2 = _interopRequireDefault(_Fade);\n\nvar _ModalBody = require(\"./ModalBody\");\n\nvar _ModalBody2 = _interopRequireDefault(_ModalBody);\n\nvar _ModalDialog = require(\"./ModalDialog\");\n\nvar _ModalDialog2 = _interopRequireDefault(_ModalDialog);\n\nvar _ModalFooter = require(\"./ModalFooter\");\n\nvar _ModalFooter2 = _interopRequireDefault(_ModalFooter);\n\nvar _ModalHeader = require(\"./ModalHeader\");\n\nvar _ModalHeader2 = _interopRequireDefault(_ModalHeader);\n\nvar _ModalTitle = require(\"./ModalTitle\");\n\nvar _ModalTitle2 = _interopRequireDefault(_ModalTitle);\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _createChainedFunction = require(\"./utils/createChainedFunction\");\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nvar _splitComponentProps2 = require(\"./utils/splitComponentProps\");\n\nvar _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);\n\nvar _StyleConfig = require(\"./utils/StyleConfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = (0, _extends3.default)({}, _Modal2.default.propTypes, _ModalDialog2.default.propTypes, {\n\n  /**\n   * Include a backdrop component. Specify 'static' for a backdrop that doesn't\n   * trigger an \"onHide\" when clicked.\n   */\n  backdrop: _propTypes2.default.oneOf(['static', true, false]),\n\n  /**\n   * Add an optional extra class name to .modal-backdrop\n   * It could end up looking like class=\"modal-backdrop foo-modal-backdrop in\".\n   */\n  backdropClassName: _propTypes2.default.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: _propTypes2.default.bool,\n\n  /**\n   * Open and close the Modal with a slide and fade animation.\n   */\n  animation: _propTypes2.default.bool,\n\n  /**\n   * A Component type that provides the modal content Markup. This is a useful\n   * prop when you want to use your own styles and markup to create a custom\n   * modal component.\n   */\n  dialogComponentClass: _elementType2.default,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it\n   * opens, and replace it to the last focused element when it closes.\n   * Generally this should never be set to false as it makes the Modal less\n   * accessible to assistive technologies, like screen-readers.\n   */\n  autoFocus: _propTypes2.default.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while\n   * open. Consider leaving the default value here, as it is necessary to make\n   * the Modal work well with assistive technologies, such as screen readers.\n   */\n  enforceFocus: _propTypes2.default.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: _propTypes2.default.bool,\n\n  /**\n   * When `true` The modal will show itself.\n   */\n  show: _propTypes2.default.bool,\n\n  /**\n   * A callback fired when the header closeButton or non-static backdrop is\n   * clicked. Required if either are specified.\n   */\n  onHide: _propTypes2.default.func,\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: _propTypes2.default.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: _propTypes2.default.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: _propTypes2.default.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: _propTypes2.default.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: _propTypes2.default.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: _propTypes2.default.func,\n\n  /**\n   * @private\n   */\n  container: _Modal2.default.propTypes.container\n});\n\nvar defaultProps = (0, _extends3.default)({}, _Modal2.default.defaultProps, {\n  animation: true,\n  dialogComponentClass: _ModalDialog2.default\n});\n\nvar childContextTypes = {\n  $bs_modal: _propTypes2.default.shape({\n    onHide: _propTypes2.default.func\n  })\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return _react2.default.createElement(_Fade2.default, (0, _extends3.default)({}, props, { timeout: Modal.TRANSITION_DURATION }));\n}\n\nfunction BackdropTransition(props) {\n  return _react2.default.createElement(_Fade2.default, (0, _extends3.default)({}, props, { timeout: Modal.BACKDROP_TRANSITION_DURATION }));\n}\n\n/* eslint-enable no-use-before-define */\n\nvar Modal = function (_React$Component) {\n  (0, _inherits3.default)(Modal, _React$Component);\n\n  function Modal(props, context) {\n    (0, _classCallCheck3.default)(this, Modal);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));\n\n    _this.handleEntering = _this.handleEntering.bind(_this);\n    _this.handleExited = _this.handleExited.bind(_this);\n    _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n    _this.handleDialogClick = _this.handleDialogClick.bind(_this);\n    _this.setModalRef = _this.setModalRef.bind(_this);\n\n    _this.state = {\n      style: {}\n    };\n    return _this;\n  }\n\n  Modal.prototype.getChildContext = function getChildContext() {\n    return {\n      $bs_modal: {\n        onHide: this.props.onHide\n      }\n    };\n  };\n\n  Modal.prototype.componentWillUnmount = function componentWillUnmount() {\n    // Clean up the listener if we need to.\n    this.handleExited();\n  };\n\n  Modal.prototype.setModalRef = function setModalRef(ref) {\n    this._modal = ref;\n  };\n\n  Modal.prototype.handleDialogClick = function handleDialogClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    this.props.onHide();\n  };\n\n  Modal.prototype.handleEntering = function handleEntering() {\n    // FIXME: This should work even when animation is disabled.\n    _events2.default.on(window, 'resize', this.handleWindowResize);\n    this.updateStyle();\n  };\n\n  Modal.prototype.handleExited = function handleExited() {\n    // FIXME: This should work even when animation is disabled.\n    _events2.default.off(window, 'resize', this.handleWindowResize);\n  };\n\n  Modal.prototype.handleWindowResize = function handleWindowResize() {\n    this.updateStyle();\n  };\n\n  Modal.prototype.updateStyle = function updateStyle() {\n    if (!_inDOM2.default) {\n      return;\n    }\n\n    var dialogNode = this._modal.getDialogElement();\n    var dialogHeight = dialogNode.scrollHeight;\n\n    var document = (0, _ownerDocument2.default)(dialogNode);\n    var bodyIsOverflowing = (0, _isOverflowing2.default)(_reactDom2.default.findDOMNode(this.props.container || document.body));\n    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;\n\n    this.setState({\n      style: {\n        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? (0, _scrollbarSize2.default)() : undefined,\n        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? (0, _scrollbarSize2.default)() : undefined\n      }\n    });\n  };\n\n  Modal.prototype.render = function render() {\n    var _props = this.props,\n        backdrop = _props.backdrop,\n        backdropClassName = _props.backdropClassName,\n        animation = _props.animation,\n        show = _props.show,\n        Dialog = _props.dialogComponentClass,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children,\n        onEntering = _props.onEntering,\n        onExited = _props.onExited,\n        props = (0, _objectWithoutProperties3.default)(_props, ['backdrop', 'backdropClassName', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);\n\n    var _splitComponentProps = (0, _splitComponentProps3.default)(props, _Modal2.default),\n        baseModalProps = _splitComponentProps[0],\n        dialogProps = _splitComponentProps[1];\n\n    var inClassName = show && !animation && 'in';\n\n    return _react2.default.createElement(_Modal2.default, (0, _extends3.default)({}, baseModalProps, {\n      ref: this.setModalRef,\n      show: show,\n      containerClassName: (0, _bootstrapUtils.prefix)(props, 'open'),\n      transition: animation ? DialogTransition : undefined,\n      backdrop: backdrop,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      backdropClassName: (0, _classnames2.default)((0, _bootstrapUtils.prefix)(props, 'backdrop'), backdropClassName, inClassName),\n      onEntering: (0, _createChainedFunction2.default)(onEntering, this.handleEntering),\n      onExited: (0, _createChainedFunction2.default)(onExited, this.handleExited)\n    }), _react2.default.createElement(Dialog, (0, _extends3.default)({}, dialogProps, {\n      style: (0, _extends3.default)({}, this.state.style, style),\n      className: (0, _classnames2.default)(className, inClassName),\n      onClick: backdrop === true ? this.handleDialogClick : null\n    }), children));\n  };\n\n  return Modal;\n}(_react2.default.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.childContextTypes = childContextTypes;\n\nModal.Body = _ModalBody2.default;\nModal.Header = _ModalHeader2.default;\nModal.Title = _ModalTitle2.default;\nModal.Footer = _ModalFooter2.default;\n\nModal.Dialog = _ModalDialog2.default;\n\nModal.TRANSITION_DURATION = 300;\nModal.BACKDROP_TRANSITION_DURATION = 150;\n\nexports.default = (0, _bootstrapUtils.bsClass)('modal', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], Modal));"},"hash":"9b97278bf6c47be5625c0b70e35b51a4"}