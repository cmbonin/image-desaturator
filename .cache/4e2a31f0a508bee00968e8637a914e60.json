{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":2,"column":37}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":3,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":4,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":5,"column":22}},{"name":"classnames","loc":{"line":6,"column":23}},{"name":"react","loc":{"line":7,"column":18}},{"name":"prop-types","loc":{"line":8,"column":22}},{"name":"prop-types-extra/lib/elementType","loc":{"line":9,"column":24}},{"name":"warning","loc":{"line":10,"column":20}},{"name":"./utils/bootstrapUtils","loc":{"line":12,"column":66}},{"name":"./utils/createChainedFunction","loc":{"line":13,"column":34}},{"name":"./Fade","loc":{"line":15,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _elementType = require(\"prop-types-extra/lib/elementType\");\n\nvar _elementType2 = _interopRequireDefault(_elementType);\n\nvar _warning = require(\"warning\");\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _createChainedFunction = require(\"./utils/createChainedFunction\");\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nvar _Fade = require(\"./Fade\");\n\nvar _Fade2 = _interopRequireDefault(_Fade);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  /**\n   * Uniquely identify the `<TabPane>` among its siblings.\n   */\n  eventKey: _propTypes2.default.any,\n\n  /**\n   * Use animation when showing or hiding `<TabPane>`s. Use `false` to disable,\n   * `true` to enable the default `<Fade>` animation or\n   * a react-transition-group v2 `<Transition/>` component.\n   */\n  animation: _propTypes2.default.oneOfType([_propTypes2.default.bool, _elementType2.default]),\n\n  /** @private * */\n  id: _propTypes2.default.string,\n\n  /** @private * */\n  'aria-labelledby': _propTypes2.default.string,\n\n  /**\n   * If not explicitly specified and rendered in the context of a\n   * `<TabContent>`, the `bsClass` of the `<TabContent>` suffixed by `-pane`.\n   * If otherwise not explicitly specified, `tab-pane`.\n   */\n  bsClass: _propTypes2.default.string,\n\n  /**\n   * Transition onEnter callback when animation is not `false`\n   */\n  onEnter: _propTypes2.default.func,\n\n  /**\n   * Transition onEntering callback when animation is not `false`\n   */\n  onEntering: _propTypes2.default.func,\n\n  /**\n   * Transition onEntered callback when animation is not `false`\n   */\n  onEntered: _propTypes2.default.func,\n\n  /**\n   * Transition onExit callback when animation is not `false`\n   */\n  onExit: _propTypes2.default.func,\n\n  /**\n   * Transition onExiting callback when animation is not `false`\n   */\n  onExiting: _propTypes2.default.func,\n\n  /**\n   * Transition onExited callback when animation is not `false`\n   */\n  onExited: _propTypes2.default.func,\n\n  /**\n   * Wait until the first \"enter\" transition to mount the tab (add it to the DOM)\n   */\n  mountOnEnter: _propTypes2.default.bool,\n\n  /**\n   * Unmount the tab (remove it from the DOM) when it is no longer visible\n   */\n  unmountOnExit: _propTypes2.default.bool\n};\n\nvar contextTypes = {\n  $bs_tabContainer: _propTypes2.default.shape({\n    getTabId: _propTypes2.default.func,\n    getPaneId: _propTypes2.default.func\n  }),\n  $bs_tabContent: _propTypes2.default.shape({\n    bsClass: _propTypes2.default.string,\n    animation: _propTypes2.default.oneOfType([_propTypes2.default.bool, _elementType2.default]),\n    activeKey: _propTypes2.default.any,\n    mountOnEnter: _propTypes2.default.bool,\n    unmountOnExit: _propTypes2.default.bool,\n    onPaneEnter: _propTypes2.default.func.isRequired,\n    onPaneExited: _propTypes2.default.func.isRequired,\n    exiting: _propTypes2.default.bool.isRequired\n  })\n};\n\n/**\n * We override the `<TabContainer>` context so `<Nav>`s in `<TabPane>`s don't\n * conflict with the top level one.\n */\nvar childContextTypes = {\n  $bs_tabContainer: _propTypes2.default.oneOf([null])\n};\n\nvar TabPane = function (_React$Component) {\n  (0, _inherits3.default)(TabPane, _React$Component);\n\n  function TabPane(props, context) {\n    (0, _classCallCheck3.default)(this, TabPane);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));\n\n    _this.handleEnter = _this.handleEnter.bind(_this);\n    _this.handleExited = _this.handleExited.bind(_this);\n\n    _this.in = false;\n    return _this;\n  }\n\n  TabPane.prototype.getChildContext = function getChildContext() {\n    return {\n      $bs_tabContainer: null\n    };\n  };\n\n  TabPane.prototype.componentDidMount = function componentDidMount() {\n    if (this.shouldBeIn()) {\n      // In lieu of the action event firing.\n      this.handleEnter();\n    }\n  };\n\n  TabPane.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.in) {\n      if (!this.shouldBeIn()) {\n        // We shouldn't be active any more. Notify the parent.\n        this.handleExited();\n      }\n    } else if (this.shouldBeIn()) {\n      // We are the active child. Notify the parent.\n      this.handleEnter();\n    }\n  };\n\n  TabPane.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.in) {\n      // In lieu of the action event firing.\n      this.handleExited();\n    }\n  };\n\n  TabPane.prototype.getAnimation = function getAnimation() {\n    if (this.props.animation != null) {\n      return this.props.animation;\n    }\n\n    var tabContent = this.context.$bs_tabContent;\n    return tabContent && tabContent.animation;\n  };\n\n  TabPane.prototype.handleEnter = function handleEnter() {\n    var tabContent = this.context.$bs_tabContent;\n    if (!tabContent) {\n      return;\n    }\n\n    this.in = tabContent.onPaneEnter(this, this.props.eventKey);\n  };\n\n  TabPane.prototype.handleExited = function handleExited() {\n    var tabContent = this.context.$bs_tabContent;\n    if (!tabContent) {\n      return;\n    }\n\n    tabContent.onPaneExited(this);\n    this.in = false;\n  };\n\n  TabPane.prototype.isActive = function isActive() {\n    var tabContent = this.context.$bs_tabContent;\n    var activeKey = tabContent && tabContent.activeKey;\n\n    return this.props.eventKey === activeKey;\n  };\n\n  TabPane.prototype.shouldBeIn = function shouldBeIn() {\n    return this.getAnimation() && this.isActive();\n  };\n\n  TabPane.prototype.render = function render() {\n    var _props = this.props,\n        eventKey = _props.eventKey,\n        className = _props.className,\n        onEnter = _props.onEnter,\n        onEntering = _props.onEntering,\n        onEntered = _props.onEntered,\n        onExit = _props.onExit,\n        onExiting = _props.onExiting,\n        onExited = _props.onExited,\n        propsMountOnEnter = _props.mountOnEnter,\n        propsUnmountOnExit = _props.unmountOnExit,\n        props = (0, _objectWithoutProperties3.default)(_props, ['eventKey', 'className', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'mountOnEnter', 'unmountOnExit']);\n\n    var _context = this.context,\n        tabContent = _context.$bs_tabContent,\n        tabContainer = _context.$bs_tabContainer;\n\n    var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['animation']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    var active = this.isActive();\n    var animation = this.getAnimation();\n\n    var mountOnEnter = propsMountOnEnter != null ? propsMountOnEnter : tabContent && tabContent.mountOnEnter;\n    var unmountOnExit = propsUnmountOnExit != null ? propsUnmountOnExit : tabContent && tabContent.unmountOnExit;\n\n    if (!active && !animation && unmountOnExit) {\n      return null;\n    }\n\n    var Transition = animation === true ? _Fade2.default : animation || null;\n\n    if (tabContent) {\n      bsProps.bsClass = (0, _bootstrapUtils.prefix)(tabContent, 'pane');\n    }\n\n    var classes = (0, _extends3.default)({}, (0, _bootstrapUtils.getClassSet)(bsProps), {\n      active: active\n    });\n\n    if (tabContainer) {\n      \"development\" !== 'production' ? (0, _warning2.default)(!elementProps.id && !elementProps['aria-labelledby'], 'In the context of a `<TabContainer>`, `<TabPanes>` are given ' + 'generated `id` and `aria-labelledby` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;\n\n      elementProps.id = tabContainer.getPaneId(eventKey);\n      elementProps['aria-labelledby'] = tabContainer.getTabId(eventKey);\n    }\n\n    var pane = _react2.default.createElement('div', (0, _extends3.default)({}, elementProps, {\n      role: 'tabpanel',\n      'aria-hidden': !active,\n      className: (0, _classnames2.default)(className, classes)\n    }));\n\n    if (Transition) {\n      var exiting = tabContent && tabContent.exiting;\n\n      return _react2.default.createElement(Transition, {\n        'in': active && !exiting,\n        onEnter: (0, _createChainedFunction2.default)(this.handleEnter, onEnter),\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: (0, _createChainedFunction2.default)(this.handleExited, onExited),\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit\n      }, pane);\n    }\n\n    return pane;\n  };\n\n  return TabPane;\n}(_react2.default.Component);\n\nTabPane.propTypes = propTypes;\nTabPane.contextTypes = contextTypes;\nTabPane.childContextTypes = childContextTypes;\n\nexports.default = (0, _bootstrapUtils.bsClass)('tab-pane', TabPane);"},"hash":"aff8eef089289288e71f7b97152acac2"}