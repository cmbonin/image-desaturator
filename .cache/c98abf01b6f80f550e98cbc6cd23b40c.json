{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":2,"column":37}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":3,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":4,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":5,"column":22}},{"name":"classnames","loc":{"line":9,"column":23}},{"name":"react","loc":{"line":10,"column":18}},{"name":"prop-types","loc":{"line":11,"column":22}},{"name":"prop-types-extra/lib/elementType","loc":{"line":12,"column":24}},{"name":"uncontrollable","loc":{"line":13,"column":27}},{"name":"./Grid","loc":{"line":15,"column":17}},{"name":"./NavbarBrand","loc":{"line":16,"column":24}},{"name":"./NavbarCollapse","loc":{"line":17,"column":27}},{"name":"./NavbarHeader","loc":{"line":18,"column":25}},{"name":"./NavbarToggle","loc":{"line":19,"column":25}},{"name":"./utils/bootstrapUtils","loc":{"line":20,"column":90}},{"name":"./utils/StyleConfig","loc":{"line":21,"column":22}},{"name":"./utils/createChainedFunction","loc":{"line":22,"column":34}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends3 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _elementType = require(\"prop-types-extra/lib/elementType\");\n\nvar _elementType2 = _interopRequireDefault(_elementType);\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _uncontrollable2 = _interopRequireDefault(_uncontrollable);\n\nvar _Grid = require(\"./Grid\");\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nvar _NavbarBrand = require(\"./NavbarBrand\");\n\nvar _NavbarBrand2 = _interopRequireDefault(_NavbarBrand);\n\nvar _NavbarCollapse = require(\"./NavbarCollapse\");\n\nvar _NavbarCollapse2 = _interopRequireDefault(_NavbarCollapse);\n\nvar _NavbarHeader = require(\"./NavbarHeader\");\n\nvar _NavbarHeader2 = _interopRequireDefault(_NavbarHeader);\n\nvar _NavbarToggle = require(\"./NavbarToggle\");\n\nvar _NavbarToggle2 = _interopRequireDefault(_NavbarToggle);\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _StyleConfig = require(\"./utils/StyleConfig\");\n\nvar _createChainedFunction = require(\"./utils/createChainedFunction\");\n\nvar _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  /**\n   * Create a fixed navbar along the top of the screen, that scrolls with the\n   * page\n   */\n  fixedTop: _propTypes2.default.bool,\n  /**\n   * Create a fixed navbar along the bottom of the screen, that scrolls with\n   * the page\n   */\n  fixedBottom: _propTypes2.default.bool,\n  /**\n   * Create a full-width navbar that scrolls away with the page\n   */\n  staticTop: _propTypes2.default.bool,\n  /**\n   * An alternative dark visual style for the Navbar\n   */\n  inverse: _propTypes2.default.bool,\n  /**\n   * Allow the Navbar to fluidly adjust to the page or container width, instead\n   * of at the predefined screen breakpoints\n   */\n  fluid: _propTypes2.default.bool,\n\n  /**\n   * Set a custom element for this component.\n   */\n  componentClass: _elementType2.default,\n  /**\n   * A callback fired when the `<Navbar>` body collapses or expands. Fired when\n   * a `<Navbar.Toggle>` is clicked and called with the new `expanded`\n   * boolean value.\n   *\n   * @controllable expanded\n   */\n  onToggle: _propTypes2.default.func,\n  /**\n   * A callback fired when a descendant of a child `<Nav>` is selected. Should\n   * be used to execute complex closing or other miscellaneous actions desired\n   * after selecting a descendant of `<Nav>`. Does nothing if no `<Nav>` or `<Nav>`\n   * descendants exist. The callback is called with an eventKey, which is a\n   * prop from the selected `<Nav>` descendant, and an event.\n   *\n   * ```js\n   * function (\n   *  Any eventKey,\n   *  SyntheticEvent event?\n   * )\n   * ```\n   *\n   * For basic closing behavior after all `<Nav>` descendant onSelect events in\n   * mobile viewports, try using collapseOnSelect.\n   *\n   * Note: If you are manually closing the navbar using this `OnSelect` prop,\n   * ensure that you are setting `expanded` to false and not *toggling* between\n   * true and false.\n   */\n  onSelect: _propTypes2.default.func,\n  /**\n   * Sets `expanded` to `false` after the onSelect event of a descendant of a\n   * child `<Nav>`. Does nothing if no `<Nav>` or `<Nav>` descendants exist.\n   *\n   * The onSelect callback should be used instead for more complex operations\n   * that need to be executed after the `select` event of `<Nav>` descendants.\n   */\n  collapseOnSelect: _propTypes2.default.bool,\n  /**\n   * Explicitly set the visiblity of the navbar body\n   *\n   * @controllable onToggle\n   */\n  expanded: _propTypes2.default.bool,\n\n  role: _propTypes2.default.string\n};\n// TODO: Remove this pragma once we upgrade eslint-config-airbnb.\n/* eslint-disable react/no-multi-comp */\n\nvar defaultProps = {\n  componentClass: 'nav',\n  fixedTop: false,\n  fixedBottom: false,\n  staticTop: false,\n  inverse: false,\n  fluid: false,\n  collapseOnSelect: false\n};\n\nvar childContextTypes = {\n  $bs_navbar: _propTypes2.default.shape({\n    bsClass: _propTypes2.default.string,\n    expanded: _propTypes2.default.bool,\n    onToggle: _propTypes2.default.func.isRequired,\n    onSelect: _propTypes2.default.func\n  })\n};\n\nvar Navbar = function (_React$Component) {\n  (0, _inherits3.default)(Navbar, _React$Component);\n\n  function Navbar(props, context) {\n    (0, _classCallCheck3.default)(this, Navbar);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));\n\n    _this.handleToggle = _this.handleToggle.bind(_this);\n    _this.handleCollapse = _this.handleCollapse.bind(_this);\n    return _this;\n  }\n\n  Navbar.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        bsClass = _props.bsClass,\n        expanded = _props.expanded,\n        onSelect = _props.onSelect,\n        collapseOnSelect = _props.collapseOnSelect;\n\n    return {\n      $bs_navbar: {\n        bsClass: bsClass,\n        expanded: expanded,\n        onToggle: this.handleToggle,\n        onSelect: (0, _createChainedFunction2.default)(onSelect, collapseOnSelect ? this.handleCollapse : null)\n      }\n    };\n  };\n\n  Navbar.prototype.handleCollapse = function handleCollapse() {\n    var _props2 = this.props,\n        onToggle = _props2.onToggle,\n        expanded = _props2.expanded;\n\n    if (expanded) {\n      onToggle(false);\n    }\n  };\n\n  Navbar.prototype.handleToggle = function handleToggle() {\n    var _props3 = this.props,\n        onToggle = _props3.onToggle,\n        expanded = _props3.expanded;\n\n    onToggle(!expanded);\n  };\n\n  Navbar.prototype.render = function render() {\n    var _extends2;\n\n    var _props4 = this.props,\n        Component = _props4.componentClass,\n        fixedTop = _props4.fixedTop,\n        fixedBottom = _props4.fixedBottom,\n        staticTop = _props4.staticTop,\n        inverse = _props4.inverse,\n        fluid = _props4.fluid,\n        className = _props4.className,\n        children = _props4.children,\n        props = (0, _objectWithoutProperties3.default)(_props4, ['componentClass', 'fixedTop', 'fixedBottom', 'staticTop', 'inverse', 'fluid', 'className', 'children']);\n\n    var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['expanded', 'onToggle', 'onSelect', 'collapseOnSelect']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    // will result in some false positives but that seems better\n    // than false negatives. strict `undefined` check allows explicit\n    // \"nulling\" of the role if the user really doesn't want one\n\n\n    if (elementProps.role === undefined && Component !== 'nav') {\n      elementProps.role = 'navigation';\n    }\n\n    if (inverse) {\n      bsProps.bsStyle = _StyleConfig.Style.INVERSE;\n    }\n\n    var classes = (0, _extends4.default)({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-top')] = fixedTop, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-bottom')] = fixedBottom, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'static-top')] = staticTop, _extends2));\n\n    return _react2.default.createElement(Component, (0, _extends4.default)({}, elementProps, { className: (0, _classnames2.default)(className, classes) }), _react2.default.createElement(_Grid2.default, { fluid: fluid }, children));\n  };\n\n  return Navbar;\n}(_react2.default.Component);\n\nNavbar.propTypes = propTypes;\nNavbar.defaultProps = defaultProps;\nNavbar.childContextTypes = childContextTypes;\n\n(0, _bootstrapUtils.bsClass)('navbar', Navbar);\n\nvar UncontrollableNavbar = (0, _uncontrollable2.default)(Navbar, { expanded: 'onToggle' });\n\nfunction createSimpleWrapper(tag, suffix, displayName) {\n  var Wrapper = function Wrapper(_ref, _ref2) {\n    var _ref2$$bs_navbar = _ref2.$bs_navbar,\n        navbarProps = _ref2$$bs_navbar === undefined ? { bsClass: 'navbar' } : _ref2$$bs_navbar;\n\n    var Component = _ref.componentClass,\n        className = _ref.className,\n        pullRight = _ref.pullRight,\n        pullLeft = _ref.pullLeft,\n        props = (0, _objectWithoutProperties3.default)(_ref, ['componentClass', 'className', 'pullRight', 'pullLeft']);\n\n    return _react2.default.createElement(Component, (0, _extends4.default)({}, props, {\n      className: (0, _classnames2.default)(className, (0, _bootstrapUtils.prefix)(navbarProps, suffix), pullRight && (0, _bootstrapUtils.prefix)(navbarProps, 'right'), pullLeft && (0, _bootstrapUtils.prefix)(navbarProps, 'left'))\n    }));\n  };\n\n  Wrapper.displayName = displayName;\n\n  Wrapper.propTypes = {\n    componentClass: _elementType2.default,\n    pullRight: _propTypes2.default.bool,\n    pullLeft: _propTypes2.default.bool\n  };\n\n  Wrapper.defaultProps = {\n    componentClass: tag,\n    pullRight: false,\n    pullLeft: false\n  };\n\n  Wrapper.contextTypes = {\n    $bs_navbar: _propTypes2.default.shape({\n      bsClass: _propTypes2.default.string\n    })\n  };\n\n  return Wrapper;\n}\n\nUncontrollableNavbar.Brand = _NavbarBrand2.default;\nUncontrollableNavbar.Header = _NavbarHeader2.default;\nUncontrollableNavbar.Toggle = _NavbarToggle2.default;\nUncontrollableNavbar.Collapse = _NavbarCollapse2.default;\n\nUncontrollableNavbar.Form = createSimpleWrapper('div', 'form', 'NavbarForm');\nUncontrollableNavbar.Text = createSimpleWrapper('p', 'text', 'NavbarText');\nUncontrollableNavbar.Link = createSimpleWrapper('a', 'link', 'NavbarLink');\n\n// Set bsStyles here so they can be overridden.\nexports.default = (0, _bootstrapUtils.bsStyles)([_StyleConfig.Style.DEFAULT, _StyleConfig.Style.INVERSE], _StyleConfig.Style.DEFAULT, UncontrollableNavbar);"},"hash":"eec3130f3870884960802ae61365df84"}