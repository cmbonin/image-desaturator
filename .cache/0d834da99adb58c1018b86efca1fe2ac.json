{"dependencies":[{"name":"babel-runtime/core-js/object/assign","loc":{"line":1,"column":27}},{"name":"babel-runtime/core-js/object/values","loc":{"line":2,"column":27}},{"name":"babel-runtime/helpers/extends","loc":{"line":3,"column":21}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":4,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":5,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":6,"column":22}},{"name":"classnames","loc":{"line":7,"column":23}},{"name":"prop-types","loc":{"line":8,"column":22}},{"name":"react","loc":{"line":9,"column":18}},{"name":"uncontrollable","loc":{"line":10,"column":27}},{"name":"./utils/bootstrapUtils","loc":{"line":12,"column":68}},{"name":"./utils/StyleConfig","loc":{"line":13,"column":29}},{"name":"./PanelBody","loc":{"line":14,"column":17}},{"name":"./PanelHeading","loc":{"line":15,"column":20}},{"name":"./PanelTitle","loc":{"line":16,"column":18}},{"name":"./PanelFooter","loc":{"line":17,"column":19}},{"name":"./PanelToggle","loc":{"line":18,"column":19}},{"name":"./PanelCollapse","loc":{"line":19,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = require(\"babel-runtime/core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _values = require(\"babel-runtime/core-js/object/values\");\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _uncontrollable2 = _interopRequireDefault(_uncontrollable);\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _StyleConfig = require(\"./utils/StyleConfig\");\n\nvar _PanelBody = require(\"./PanelBody\");\n\nvar _PanelBody2 = _interopRequireDefault(_PanelBody);\n\nvar _PanelHeading = require(\"./PanelHeading\");\n\nvar _PanelHeading2 = _interopRequireDefault(_PanelHeading);\n\nvar _PanelTitle = require(\"./PanelTitle\");\n\nvar _PanelTitle2 = _interopRequireDefault(_PanelTitle);\n\nvar _PanelFooter = require(\"./PanelFooter\");\n\nvar _PanelFooter2 = _interopRequireDefault(_PanelFooter);\n\nvar _PanelToggle = require(\"./PanelToggle\");\n\nvar _PanelToggle2 = _interopRequireDefault(_PanelToggle);\n\nvar _PanelCollapse = require(\"./PanelCollapse\");\n\nvar _PanelCollapse2 = _interopRequireDefault(_PanelCollapse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + '--' + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: _propTypes2.default.bool,\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: _propTypes2.default.func,\n  eventKey: _propTypes2.default.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: _propTypes2.default.string\n};\n\nvar contextTypes = {\n  $bs_panelGroup: _propTypes2.default.shape({\n    getId: _propTypes2.default.func,\n    activeKey: _propTypes2.default.any,\n    onToggle: _propTypes2.default.func\n  })\n};\n\nvar childContextTypes = {\n  $bs_panel: _propTypes2.default.shape({\n    headingId: _propTypes2.default.string,\n    bodyId: _propTypes2.default.string,\n    bsClass: _propTypes2.default.string,\n    onToggle: _propTypes2.default.func,\n    expanded: _propTypes2.default.bool\n  })\n};\n\nvar Panel = function (_React$Component) {\n  (0, _inherits3.default)(Panel, _React$Component);\n\n  function Panel() {\n    (0, _classCallCheck3.default)(this, Panel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n    _this.handleToggle = _this.handleToggle.bind(_this);\n    return _this;\n  }\n\n  Panel.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        eventKey = _props.eventKey,\n        id = _props.id;\n\n    var _ref = this.context.$bs_panelGroup || {},\n        getId = _ref.getId;\n\n    var ids = void 0;\n    var idKey = eventKey == null ? id : eventKey;\n\n    if (idKey !== null) {\n      getId = getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: (0, _extends3.default)({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  Panel.prototype.getExpanded = function getExpanded() {\n    var eventKey = this.props.eventKey;\n\n    var _ref2 = this.context.$bs_panelGroup || {},\n        activeKey = _ref2.activeKey;\n\n    return this.props.expanded != null || activeKey === undefined ? this.props.expanded : activeKey === eventKey;\n  };\n\n  Panel.prototype.handleToggle = function handleToggle(e) {\n    var _ref3 = this.context.$bs_panelGroup || {},\n        onToggle = _ref3.onToggle;\n\n    var expanded = !this.getExpanded();\n\n    this.props.onToggle(expanded, e);\n    if (onToggle) {\n      onToggle(this.props.eventKey, expanded, e);\n    }\n  };\n\n  Panel.prototype.render = function render() {\n    var _props2 = this.props,\n        className = _props2.className,\n        children = _props2.children;\n\n    var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return _react2.default.createElement('div', (0, _extends3.default)({}, props, { className: (0, _classnames2.default)(className, (0, _bootstrapUtils.getClassSet)(bsProps)) }), children);\n  };\n\n  return Panel;\n}(_react2.default.Component);\n\nPanel.propTypes = propTypes;\n\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\n\nvar UncontrolledPanel = (0, _uncontrollable2.default)((0, _bootstrapUtils.bsClass)('panel', (0, _bootstrapUtils.bsStyles)([].concat((0, _values2.default)(_StyleConfig.State), [_StyleConfig.Style.DEFAULT, _StyleConfig.Style.PRIMARY]), _StyleConfig.Style.DEFAULT, Panel)), { expanded: 'onToggle' });\n\n(0, _assign2.default)(UncontrolledPanel, {\n  Heading: _PanelHeading2.default,\n  Title: _PanelTitle2.default,\n  Body: _PanelBody2.default,\n  Footer: _PanelFooter2.default,\n  Toggle: _PanelToggle2.default,\n  Collapse: _PanelCollapse2.default\n});\n\nexports.default = UncontrolledPanel;"},"hash":"e7bd64b3bd8197c598c5ae648c0a9670"}