{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":2,"column":37}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":3,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":4,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":5,"column":22}},{"name":"classnames","loc":{"line":6,"column":23}},{"name":"react","loc":{"line":7,"column":18}},{"name":"prop-types","loc":{"line":8,"column":22}},{"name":"prop-types-extra/lib/elementType","loc":{"line":9,"column":24}},{"name":"warning","loc":{"line":10,"column":20}},{"name":"./FormControlFeedback","loc":{"line":12,"column":32}},{"name":"./FormControlStatic","loc":{"line":13,"column":30}},{"name":"./utils/bootstrapUtils","loc":{"line":14,"column":68}},{"name":"./utils/StyleConfig","loc":{"line":15,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _elementType = require(\"prop-types-extra/lib/elementType\");\n\nvar _elementType2 = _interopRequireDefault(_elementType);\n\nvar _warning = require(\"warning\");\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _FormControlFeedback = require(\"./FormControlFeedback\");\n\nvar _FormControlFeedback2 = _interopRequireDefault(_FormControlFeedback);\n\nvar _FormControlStatic = require(\"./FormControlStatic\");\n\nvar _FormControlStatic2 = _interopRequireDefault(_FormControlStatic);\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _StyleConfig = require(\"./utils/StyleConfig\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  componentClass: _elementType2.default,\n  /**\n   * Only relevant if `componentClass` is `'input'`.\n   */\n  type: _propTypes2.default.string,\n  /**\n   * Uses `controlId` from `<FormGroup>` if not explicitly specified.\n   */\n  id: _propTypes2.default.string,\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <FormControl inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: _propTypes2.default.func\n};\n\nvar defaultProps = {\n  componentClass: 'input'\n};\n\nvar contextTypes = {\n  $bs_formGroup: _propTypes2.default.object\n};\n\nvar FormControl = function (_React$Component) {\n  (0, _inherits3.default)(FormControl, _React$Component);\n\n  function FormControl() {\n    (0, _classCallCheck3.default)(this, FormControl);\n\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  FormControl.prototype.render = function render() {\n    var formGroup = this.context.$bs_formGroup;\n    var controlId = formGroup && formGroup.controlId;\n\n    var _props = this.props,\n        Component = _props.componentClass,\n        type = _props.type,\n        _props$id = _props.id,\n        id = _props$id === undefined ? controlId : _props$id,\n        inputRef = _props.inputRef,\n        className = _props.className,\n        bsSize = _props.bsSize,\n        props = (0, _objectWithoutProperties3.default)(_props, ['componentClass', 'type', 'id', 'inputRef', 'className', 'bsSize']);\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    \"development\" !== 'production' ? (0, _warning2.default)(controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n\n    // input[type=\"file\"] should not have .form-control.\n    var classes = void 0;\n    if (type !== 'file') {\n      classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n    }\n\n    // If user provides a size, make sure to append it to classes as input-\n    // e.g. if bsSize is small, it will append input-sm\n    if (bsSize) {\n      var size = _StyleConfig.SIZE_MAP[bsSize] || bsSize;\n      classes[(0, _bootstrapUtils.prefix)({ bsClass: 'input' }, size)] = true;\n    }\n\n    return _react2.default.createElement(Component, (0, _extends3.default)({}, elementProps, {\n      type: type,\n      id: id,\n      ref: inputRef,\n      className: (0, _classnames2.default)(className, classes)\n    }));\n  };\n\n  return FormControl;\n}(_react2.default.Component);\n\nFormControl.propTypes = propTypes;\nFormControl.defaultProps = defaultProps;\nFormControl.contextTypes = contextTypes;\n\nFormControl.Feedback = _FormControlFeedback2.default;\nFormControl.Static = _FormControlStatic2.default;\n\nexports.default = (0, _bootstrapUtils.bsClass)('form-control', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.SMALL, _StyleConfig.Size.LARGE], FormControl));"},"hash":"7e379bb4bd98252a8da22cc842dbcbb9"}